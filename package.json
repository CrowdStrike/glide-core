{
  "name": "@crowdstrike/glide-core",
  "version": "0.25.0",
  "description": "A Web Component design system",
  "author": "CrowdStrike UX Team",
  "license": "Apache-2.0",
  "type": "module",
  "repository": {
    "type": "git",
    "url": "https://github.com/CrowdStrike/glide-core.git"
  },
  "publishConfig": {
    "provenance": true
  },
  "keywords": [
    "web-components",
    "lit",
    "design-system"
  ],
  "files": [
    "dist",
    "!dist/*.*.test.*.d.ts",
    "!dist/*.*.test.*.js",
    "!dist/*.stories.d.ts",
    "!dist/*.stories.js",
    "!dist/*.test.*.d.ts",
    "!dist/*.test.*.js",
    "!dist/cem-analyzer-plugins",
    "!dist/eslint",
    "!dist/figma",
    "!dist/icons/storybook.*",
    "!dist/storybook",
    "!dist/stylelint",
    "!dist/ts-morph"
  ],
  "exports": {
    "./*.js": {
      "types": "./dist/*.d.ts",
      "import": "./dist/*.js"
    },
    "./package.json": "./package.json",
    "./translations/*": null,
    "./tooltip.container.js": null,
    "./toasts.toast.js": null,
    "./styles/variables.css": "./dist/styles/variables.css",
    "./styles/fonts.css": "./dist/styles/fonts.css",
    "./styles/*": null,
    "./library/*": null,
    "./label.js": null,
    "./icons/*": null,
    "./*.styles.js": null
  },
  "scripts": {
    "start": "per-env",
    "start:development": "npm-run-all --parallel --print-name start:development:*",
    "start:development:cem-analyze": "chokidar ./custom-elements.config.js './src/*.ts' './src/*.*.ts' './src/cem-analyzer-plugins/**' --ignore '**/*stories*' --ignore '**/*test*' --initial --silent --command 'tsc --noCheck --outDir ./dist && NODE_OPTIONS=--no-warnings=ExperimentalWarning cem analyze --config ./custom-elements.config.js --quiet'",
    "start:development:cem-analyze:comment": "JSON module imports produce a warning. Remove NODE_OPTIONS when JSON module imports are no longer experimental.",
    "start:development:storybook": "storybook dev --config-dir .storybook --no-open --no-version-updates --port 6006",
    "start:development:ts-morph": "chokidar ./custom-elements.json './src/ts-morph/**' --initial --silent --command 'tsx ./src/ts-morph/run.ts'",
    "start:development:ts-morph:comment:tsx": "Remove `tsx` once Node.js type stripping is available.",
    "start:production": "rimraf ./dist && npm-run-all --aggregate-output --print-label --parallel start:production:typescript start:production:storybook start:production:esbuild",
    "start:production:esbuild": "node ./esbuild.js",
    "start:production:cem-analyze": "tsc --noCheck --outDir ./dist && NODE_OPTIONS=--no-warnings=ExperimentalWarning cem analyze --config ./custom-elements.config.js --quiet && git diff --quiet -- || { echo ERROR: Uncommitted elements manifest changes. Run this command locally and commit the changes.; exit 1; }",
    "start:production:figma": "tsx ./src/figma/run.ts",
    "start:production:storybook": "storybook build --config-dir .storybook --disable-telemetry --output-dir ./dist/storybook",
    "start:production:ts-morph": "tsx ./src/ts-morph/run.ts && git diff --quiet -- || { echo ERROR: Uncommitted code modifications. Run this command locally and commit the changes.; exit 1; }",
    "start:production:typescript": "tsc --noCheck --outDir ./dist && node ./terser.js",
    "format": "per-env",
    "format:development": "chokidar '**/*' --ignore 'dist/**' --ignore '.changeset/**' --ignore '.git/**' --ignore 'node_modules/**' --ignore 'pnpm-lock.yaml' --initial --silent --comand 'prettier --write --ignore-unknown {path} && stylelint {path}'",
    "format:production": "prettier . --debug-check",
    "lint": "per-env",
    "lint:development": "npm-run-all --parallel --print-name lint:development:*",
    "lint:development:eslint": "chokidar ./eslint-config.js ./src/eslint/** ./src/*.ts ./src/*.*.ts --initial --silent --command 'tsc --noCheck --outDir ./dist && eslint {path} --fix'",
    "lint:development:lit-analyzer": "lit-analyzer **/*.ts",
    "lint:development:stylelint": "chokidar ./.stylelintrc.js ./src/stylelint/** ./src/*.styles.ts ./src/*.*.styles.ts --initial --silent --command 'tsc --noCheck --outDir ./dist && stylelint {path} --custom-syntax postcss-lit --fix'",
    "lint:production": "npm-run-all --aggregate-output --print-label --parallel lint:production:*",
    "lint:production:eslint": "tsc --noCheck --outDir ./dist && eslint .",
    "lint:production:lit-analyzer": "lit-analyzer **/*.ts",
    "lint:production:stylelint": "tsc --noCheck --outDir ./dist && stylelint '**/*.styles.ts' --custom-syntax postcss-lit --no-color",
    "test": "per-env",
    "test:development": "npm-run-all --parallel test:development:web-test-runner test:development:web-test-runner:serve-coverage",
    "test:development:playwright": "playwright test --quiet --ui-port 6007 --update-snapshots",
    "test:development:playwright:update": "rimraf ./src/aria-snapshots && playwright test --quiet --project aria --update-snapshots --workers 100%",
    "test:development:vitest": "vitest --config ./vitest.config.js & chokidar './src/eslint/**' './src/stylelint/**' --ignore './src/eslint/rules/*.test.ts' './src/stylelint/*.test.ts' --initial --silent --command 'tsc --noCheck --outDir ./dist'",
    "test:development:vitest:comment": "Excluded from `test:development` because Vitest muddies the console when running alongside Web Test Runner.",
    "test:development:web-test-runner": "web-test-runner --watch",
    "test:development:web-test-runner:serve-coverage": "pnpm exec http-server dist/coverage/lcov-report --silent",
    "test:production": "pnpm start:production:esbuild && npm-run-all --aggregate-output --print-label --parallel test:production:*",
    "test:production:playwright:aria": "playwright test --quiet --only-changed origin/main",
    "test:production:playwright:visuals": "playwright test --ignore-snapshots --quiet --only-changed origin/main",
    "test:production:playwright:visuals:comment": "Snapshots are ignored because this is meant to be only a quick smoke test telling us when we've written a test incorrectly.",
    "test:production:vitest": "tsc --noCheck --outDir ./dist && vitest run --config ./vitest.config.js",
    "test:production:web-test-runner": "web-test-runner",
    "typecheck": "per-env",
    "typecheck:development": "tsc --erasableSyntaxOnly --outDir ./dist -w",
    "typecheck:production": "tsc --erasableSyntaxOnly --outDir ./dist",
    "postinstall": "is-ci || pnpm dlx playwright@1.52.0 install --only-shell --with-deps chromium",
    "postinstall:comment": "Not installing Chromium in CI every time we run `pnpm install` speeds up builds at the cost of having to also update Playwright's version in our workflows whenever we update Playwright here.",
    "prepare": "is-ci || husky install",
    "release": "changeset publish"
  },
  "dependencies": {
    "@floating-ui/dom": "^1.6.12",
    "@shoelace-style/localize": "^3.2.1",
    "nanoid": "^5.0.9"
  },
  "peerDependencies": {
    "lit": "^3.2.1"
  },
  "devDependencies": {
    "@changesets/changelog-github": "^0.5.0",
    "@changesets/cli": "^2.27.10",
    "@custom-elements-manifest/analyzer": "^0.10.4",
    "@eslint/eslintrc": "^3.3.0",
    "@eslint/js": "^9.22.0",
    "@figma/rest-api-spec": "^0.27.0",
    "@open-wc/testing": "^4.0.0",
    "@playwright/test": "^1.52.0",
    "@rollup/plugin-commonjs": "^28.0.2",
    "@storybook/addon-actions": "^8.6.3",
    "@storybook/addon-controls": "^8.6.3",
    "@storybook/addon-docs": "^8.6.3",
    "@storybook/addon-toolbars": "^8.6.3",
    "@storybook/core-events": "^8.6.3",
    "@storybook/manager-api": "^8.6.3",
    "@storybook/preview-api": "^8.6.3",
    "@storybook/theming": "^8.6.3",
    "@storybook/web-components": "^8.6.3",
    "@storybook/web-components-vite": "^8.6.3",
    "@stylistic/eslint-plugin": "^2.13.0",
    "@types/eslint": "^8.56.12",
    "@types/mocha": "^10.0.10",
    "@types/sinon": "^17.0.3",
    "@typescript-eslint/rule-tester": "^8.29.0",
    "@typescript-eslint/types": "^8.29.0",
    "@typescript-eslint/utils": "^8.29.0",
    "@web/dev-server-esbuild": "^1.0.4",
    "@web/dev-server-rollup": "^0.6.4",
    "@web/test-runner": "^0.19.0",
    "@web/test-runner-commands": "^0.9.0",
    "@web/test-runner-playwright": "^0.11.0",
    "chalk": "^5.3.0",
    "chokidar-cli": "^3.0.0",
    "comment-parser": "^1.4.1",
    "custom-elements-manifest": "^2.1.0",
    "esbuild": "^0.25.0",
    "eslint": "^9.22.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-lit": "^1.15.0",
    "eslint-plugin-lit-a11y": "^4.1.4",
    "eslint-plugin-sort-class-members": "^1.21.0",
    "eslint-plugin-unicorn": "^58.0.0",
    "globals": "^15.13.0",
    "globby": "^14.0.2",
    "http-server": "^14.1.1",
    "husky": "^8.0.3",
    "is-ci": "^4.1.0",
    "lint-staged": "^15.2.11",
    "lit": "^3.3.0",
    "lit-analyzer": "^2.0.3",
    "minify-literals": "^1.0.10",
    "node-html-parser": "^7.0.1",
    "npm-run-all2": "^7.0.2",
    "per-env": "^1.0.2",
    "playwright": "^1.52.0",
    "postcss": "^8.4.49",
    "postcss-lit": "^1.1.1",
    "prettier": "^3.5.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "rimraf": "^6.0.1",
    "sinon": "^19.0.2",
    "storybook": "^8.6.3",
    "stylelint": "^16.12.0",
    "stylelint-config-standard": "^36.0.1",
    "stylelint-order": "^6.0.4",
    "stylelint-prettier": "^5.0.2",
    "stylelint-use-logical": "^2.1.2",
    "stylelint-use-nesting": "^6.0.0",
    "terser": "^5.37.0",
    "ts-lit-plugin": "^2.0.2",
    "ts-morph": "^25.0.1",
    "tsx": "^4.19.2",
    "typescript": "^5.8.2",
    "typescript-eslint": "^8.29.0",
    "vite": "^6.3.2",
    "vitest": "^3.0.8",
    "yocto-spinner": "^0.2.0"
  },
  "engines": {
    "node": ">= 20",
    "pnpm": ">= 9"
  },
  "packageManager": "pnpm@9.15.0+sha512.76e2379760a4328ec4415815bcd6628dee727af3779aaa4c914e3944156c4299921a89f976381ee107d41f12cfa4b66681ca9c718f0668fa0831ed4c6d8ba56c"
}
