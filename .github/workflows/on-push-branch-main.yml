name: On Push Branch "main"

on:
  push:
    branches:
      - main

env:
  CI: true

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  install_dependencies:
    name: Install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm

  release:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
    permissions:
      # https://docs.npmjs.com/generating-provenance-statements#publishing-packages-with-provenance-via-github-actions
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          title: Release Preview
          commit: Version package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - run: pnpm start
        env:
          BASE_URL: main
          NODE_ENV: production
      - uses: actions/upload-artifact@v4
        with:
          path: dist/storybook

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
      - build
    steps:
      - uses: actions/download-artifact@v4
      # TODO: Remove after this is resolved: https://www.cloudflarestatus.com/incidents/t5nrjmpxc1cj
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.22.35.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Configure AWS CLI
        env:
          CLOUDFLARE_R2_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          CLOUDFLARE_R2_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}

        # https://developers.cloudflare.com/r2/examples/aws/aws-cli
        run: |
          aws configure set region auto
          aws configure set output json
          aws configure set aws_access_key_id $CLOUDFLARE_R2_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $CLOUDFLARE_R2_SECRET_ACCESS_KEY
      - name: Deploy
        run: aws s3 sync ./artifact s3://${{ vars.CLOUDFLARE_R2_BUCKET_NAME }}/main --endpoint-url ${{ vars.CLOUDFLARE_R2_ENDPOINT }}
