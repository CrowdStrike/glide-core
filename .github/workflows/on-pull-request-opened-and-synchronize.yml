name: On Pull Request Opened And Synchronize

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

env:
  CI: true

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  install_dependencies:
    name: Install
    runs-on: macos-latest
    steps:
      - run: JOB_ID=$(gh run view ${{ github.run_id }} --json jobs --jq '.jobs[] | .databaseId')
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - run: echo $JOB_ID; gh run rerun --job $JOB_ID;
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          JOB_ID: ${{env.JOB_ID}}
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm

  format:
    name: Format
    runs-on: macos-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - run: pnpm format
        env:
          NODE_ENV: production

  lint:
    name: Lint
    runs-on: macos-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - run: pnpm start
        env:
          NODE_ENV: production
      - run: pnpm lint
        env:
          NODE_ENV: production

  typecheck:
    name: Typecheck
    runs-on: macos-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - run: pnpm typecheck
        env:
          NODE_ENV: production

  test:
    name: Test
    runs-on: macos-latest
    # Something has gone wrong if our tests take longer than 10 minutes.
    timeout-minutes: 10
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - run: pnpm test
        env:
          NODE_ENV: production
      - name: Upload coverage report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: dist/coverage/

  # TODO: why are install_dependencies and the pnpm action both used everywhere?
  update_snapshots:
    name: Snapshots
    runs-on: ubuntu-latest
    # TODO: explain why failure()
    needs:
      - test_visuals
      - deploy-test-report
    steps:
      # - uses: ./.github/workflows/update-snapshots.yml
      #   secrets: inherit
      #   with:
      #     environment: update-snapshots
      - run: JOB_ID=$(gh api repos/${github.event.repository.name}/actions/runs/${RUN_ID}/jobs --jq '.jobs[] | select(.name == "${JOB_NAME}") | .databaseId'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          RUN_ID: ${{ github.run_id }}
      - run: echo $JOB_ID; gh run rerun --job $JOB_ID;
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          JOB_ID: ${{env.JOB_ID}}

  fetch_snapshots:
    name: Fetch Snapshots
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/aws-cli
      - run: aws s3 sync s3://${{ vars.CLOUDFLARE_R2_BUCKET_NAME }}/snapshots ./snapshots --endpoint-url ${{ vars.CLOUDFLARE_R2_ENDPOINT }}
      - uses: actions/upload-artifact@v4
        with:
          path: snapshots
          name: visual-test-snapshots (current)

  test_visuals:
    name: Test (Visuals)
    runs-on: ubuntu-latest
    # Increase Playwright sharding if the job takes longer than 10 minutes.
    timeout-minutes: 10
    needs:
      - install_dependencies
      - fetch_snapshots
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        shardTotal: [10]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - uses: actions/download-artifact@v4
        with:
          path: dist/snapshots
          name: visual-test-snapshots (current)
      - name: Test
        id: test
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      - name: Upload Report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-blob-report-${{ matrix.shardIndex }}
          path: blob-report
      - uses: ./.github/actions/update-snapshots
        if: steps.test.outcome == 'failure'
        with:
          environment: update-snapshots

  deploy-test-report:
    name: Deploy Test Report
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    needs:
      - test_visuals
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: visual-test-blob-report
          pattern: visual-test-blob-report-*
      - run: |
          PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL=https://${{ vars.CLOUDFLARE_CUSTOM_DOMAIN }}/${{ github.head_ref }}/visual-test-report/data/ npx playwright merge-reports --reporter html ./visual-test-blob-report
      # TODO: Remove after this is resolved: https://www.cloudflarestatus.com/incidents/t5nrjmpxc1cj
      - uses: ./.github/actions/aws-cli
      - uses: actions/upload-artifact@v4
        with:
          name: visual-test-html-report
          path: ./playwright-report
      - name: Deploy
        run: aws s3 sync ./playwright-report s3://${{ vars.CLOUDFLARE_R2_BUCKET_NAME }}/${{ github.head_ref }}/visual-test-report --delete --endpoint-url ${{ vars.CLOUDFLARE_R2_ENDPOINT }}
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: visual-test-report
          message: |+
            ## Visual Test Report
            https://${{ vars.CLOUDFLARE_CUSTOM_DOMAIN }}/${{ github.head_ref }}/visual-test-report

  build:
    name: Build
    runs-on: macos-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm
      - run: pnpm start
        env:
          BASE_URL: ${{ github.head_ref }}
          NODE_ENV: production
      - uses: actions/upload-artifact@v4
        with:
          name: storybook
          path: dist/storybook

  deploy-storybook:
    name: Deploy Storybook
    # Ubuntu instead of MacOS because the performance difference is
    # negligible and Ubuntu includes the AWS CLI.
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/download-artifact@v4
      - uses: ./.github/actions/aws-cli
      - name: Deploy
        run: aws s3 sync ./storybook s3://${{ vars.CLOUDFLARE_R2_BUCKET_NAME }}/${{ github.head_ref }} --endpoint-url ${{ vars.CLOUDFLARE_R2_ENDPOINT }}
      - uses: marocchino/sticky-pull-request-comment@v2
        # TODO: can this comment be combined with the other one?
        with:
          header: storybook
          message: |+
            ## Storybook
            https://${{ vars.CLOUDFLARE_CUSTOM_DOMAIN }}/${{ github.head_ref }}
